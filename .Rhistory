coMut_df$KRAS_mutations_raw[i] <- length(krasHitCells)
brafHitsNorm <- length(brafHitCells) / numCells
egfrHitsNorm <- length(egfrHitCells) / numCells
krasHitsNorm <- length(krasHitCells) / numCells
coMut_df$BRAF_mutations_norm[i] <- brafHitsNorm
coMut_df$EGFR_mutations_norm[i] <- egfrHitsNorm
coMut_df$KRAS_mutations_norm[i] <- krasHitsNorm
}
coMut_df$BRAF_mutations_norm <- coMut_df$BRAF_mutations_norm * 1000
coMut_df$EGFR_mutations_norm <- coMut_df$EGFR_mutations_norm * 1000
coMut_df$KRAS_mutations_norm <- coMut_df$KRAS_mutations_norm * 1000
sub <- coMut_df[,c(4,5,6)]
data <- as.matrix(sub)
heatmap(data, scale = 'column')
# what if i do a log tranform
data <- log(data)
inf = which(data == '-Inf')
data[inf] <- 0
heatmap(data, scale = 'column', cexRow = 0.7, cexCol = 1.3)
library(pheatmap)
#pdf('co-mutations_heatmap.pdf', 10, 10)
p <- pheatmap(data, cellheight = NA)
#dev.off()
indicies <- which(cells_df$patient_id == 'TH185')
lolli_df <- cells_df[indicies,]
lolli_df <- lolli_df[,(9:14)] # keep just egfr mut cols
lolli_df <- lolli_df[rowSums(is.na(lolli_df)) != ncol(lolli_df),] # remove rows
lolli_df <- lolli_df[,colSums(is.na(lolli_df)) != nrow(lolli_df)] # remove cols
for(i in 1:nrow(lolli_df)){
for(j in 1:ncol(lolli_df)){
lolli_df[i,j] <- gsub(" ", "", lolli_df[i,j])
}
}
elementsList <- c(lolli_df$EGFRmut1, lolli_df$EGFRmut2, lolli_df$EGFRmut3, lolli_df$EGFRmut4, lolli_df$EGFRmut5, lolli_df$EGFRmut6)
unique(elementsList)
countsTbl <- as.data.frame(table(elementsList))
countsTbl
# declare gene name!!
geneName <- 'EGFR'
baseStr <- './lollipops -legend -labels -o=TH185_egfr.svg'
cmdStr <- paste(baseStr, geneName)
for(i in 1:nrow(countsTbl)){
toAdd <- countsTbl$elementsList[i]
toAdd <- paste(toAdd, '@', sep = '')
toAdd <- paste(toAdd, countsTbl$Freq[i], sep = '')
cmdStr <- paste(cmdStr, toAdd, sep = " ")
}
# money
cmdStr
dim(lolli_df)
145 / 667
c <- read.csv("/Users/lincoln.harris/Desktop/CosmicGenomeScreensMutantExport.tsv", header = T)
View(c)
c <- read.csv("/Users/lincoln.harris/Desktop/CosmicGenomeScreensMutantExport.tsv", sep='/t', header = T)
c <- read.csv("/Users/lincoln.harris/Desktop/CosmicGenomeScreensMutantExport.tsv", sep='\t', header = T)
c <- read.csv('/Users/lincoln.harris/Desktop/CosmicGenomeScreensMutantExport.tsv', sep = '\t', header = T)
View(c)
db <- read.csv('/Users/lincoln.harris/Desktop/database_laud.csv', header = T)
View(db)
library(vcfR)
v1 <- read.vcfR('/Users/lincoln.harris/code/SNP_calling_pipeline/vcf_test/A10_1001000407.vcf')
v2 <- read.vcfR('/Users/lincoln.harris/code/SNP_calling_pipeline/vcf_test/A11_1001000408.vcf')
v3 <- read.vcfR('/Users/lincoln.harris/code/SNP_calling_pipeline/vcf_test/A12_1001000317.vcf')
v4 <- read.vcfR('/Users/lincoln.harris/code/SNP_calling_pipeline/vcf_test/A13_1001000340.vcf')
View(v1)
View(v1@fix)
dbSNP <- read.vcfR('/Users/lincoln.harris/Desktop/common_all_20180418.vcf')
cosmic_df <- read.csv('/Users/lincoln.harris/Desktop/CosmicGenomeScreensMutantExport.tsv', header = T, sep = '\t')
toKeep <- which(cosmic_df$Gene.name == 'EGFR')
cosmic_EGFR <- cosmic_df[toKeep, ]
toKeep1 <- which(cosmic_EGFR$Primary.site == 'lung')
cosmic_EGFR <- cosmic_EGFR[toKeep1,]
toKeep2 <- which(cosmic_EGFR$Primary.histology == 'carcinoma')
cosmic_EGFR <- cosmic_EGFR[toKeep2,]
cosmic_EGFR$Mutation.AA <- gsub('p.', '', cosmic_EGFR$Mutation.AA)
#cosmic_EGFR$Mutation.AA <- gsub('[.]', '', cosmic_EGFR$Mutation.AA)
tst_indel <- '7:55174773-55174787'
vcf1 <- as.data.frame(vcf1@fix)
View(cosmic_EGFR)
library(vcfR)
t <- read.vcfR('/Users/lincoln.harris/Desktop/C3_1001000403.vcf')
View(t)
View(t@fix)
t1 <- read.vcfR('/Users/lincoln.harris/Desktop/H1_1001000362.vcf')
View(t1@fix)
library(vcfR)
t <- read.vcfR('/Users/lincoln.harris/Downloads/A11_B001470.vcf')
view(t@fix)
View(t@fix)
library(vcfR)
t <- read.vcfR('/Users/lincoln.harris/Desktop/A14_B003529.vcf')
View(t@fix)
samples <- read.csv('/Users/lincoln.harris/code/fusion_detection_pipeline/STAR_fus/12.10_run/samples.csv')
View(samples)
which(samples$id == 'L12_B003527')
samples[10255,]
which(samples$id == 'E4_1001000408')
samples[2033,]
samples <- read.csv('/Users/lincoln.harris/code/fusion_detection_pipeline/STAR_fus/12.10_run/samples.csv')
View(samples)
samples <- read.csv('/Users/lincoln.harris/code/fusion_detection_pipeline/STAR_fus/12.10_run/samples.csv')
View(samples)
which(samples$input_fq1 = 's3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/STAR-fus_out/*')
which(samples$input_fq1 == 's3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/STAR-fus_out/*')
which(samples$input_fq1 == 's3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/STAR-fus_out/')
which(samples$input_fq1 == 's3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307')
which(samples$input_fq1 == 's3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307*')
which(samples$input_fq1 == 's3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307/*')
grepl(samples$input_fq1, '3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307/P9_B000861/')
grepl(samples$input_fq1, s3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307/P9_B000861/)
which(samples$sample_id %in% P4_B003646)
which(samples$sample_id %in% 'P4_B003646')
which(samples$sample_id %in% 's3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307/')
which('s3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307/' %in% samples$sample_id)
'P9_B003646' %in% samples
'P9_B003646' %in% samples$sample_id
which('P9_B003646' %in% samples$sample_id)
grepl('s3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307/', samples$input_fq1)
which(grepl('s3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307/', samples$input_fq1))
which(grepl('s3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/180307/', samples$input_fq1))
which(grepl('s3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/171120_concat/', samples$input_fq1))
which(grepl('s3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/STAR_fus-out/', samples$input_fq1))
which(grepl('s3://darmanis-group/singlecell_lungadeno/non_immune/nonImmune_fastqs_9.27/STAR-fus_out/', samples$input_fq1))
samples <- read.csv('/Users/lincoln.harris/code/fusion_detection_pipeline/STAR_fus/12.10_run/samples.csv')
samples <- read.csv('/Users/lincoln.harris/code/fusion_detection_pipeline/STAR_fus/12.10_run/samples.csv')
samples <- read.csv('/Users/lincoln.harris/code/fusion_detection_pipeline/STAR_fus/12.10_run/samples.csv')
which(samples$sample_id == 'G19_B003113')
samples[7428,]
len(unique(samples$input_fq1))
length(unique(samples$input_fq1))
length(unique(samples$input_fq2))
length(unique(samples$input_fq1))
length(unique(samples$input_fq2))
which(samples$input_fq1 == '')
r_missing_1 <- which(samples$input_fq1 == '')
r_missing_2 <- which(samples$input_fq2 == '')
samples_alt <- samples[-c(r_missing_1, r_missing_2),]
write.csv(samples_alt, '/Users/lincoln.harris/code/fusion_detection_pipeline/STAR_fus/12.10_run/samples_alt.cs')
write.csv(samples_alt, '/Users/lincoln.harris/code/fusion_detection_pipeline/STAR_fus/12.10_run/samples_alt.cs', row.names = F, quote = F)
t <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions.abridged.tsv', sep = '/t')
t <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions.abridged.tsv', sep = 't')
View(t)
t <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions.abridged.tsv', sep = 't', header = T)
View(t)
t1 <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions.tsv', sep = 't', header = T)
View(t1)
t2 <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions(1).tsv', sep = 't', header = T)
View(t2)
t <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions.tsv', sep = '/t', header = T)
t <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions.tsv', sep = 't', header = T)
View(t)
t <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions.tsv', header = T)
library(vcfR)
t <- read.vcfR('/Users/lincoln.harris/code/SNP_calling_pipeline/vcf/ M2_B003132.vcf')
t <- read.vcfR('/Users/lincoln.harris/code/SNP_calling_pipeline/vcf/M2_B003132.vcf')
view(t@fix)
View(t@fix)
db <- read.csv('/Users/lincoln.harris/code/SNP_calling_pipeline/CosmicGenomeScreensMutantExport.tsv', sep = '\t', header = T)
t <- read.csv('/Users/lincoln.harris/Desktop/star-fusion.fusion_predictions.tsv', sep = '\t')
View(t)
t = read.csv('/Users/lincoln.harris/Desktop/out1.csv')
View(t)
t = read.csv('/Users/lincoln.harris/Desktop/out1.csv', sep = '/t')
t = read.csv('/Users/lincoln.harris/Desktop/out1.csv', sep = 't')
t = read.csv('/Users/lincoln.harris/Desktop/out1.csv', sep = ' ')
t = read.csv('/Users/lincoln.harris/Desktop/out1.csv')
View(t)
setwd('/Users/lincoln.harris/Desktop/')
t <- read.csv('/Users/lincoln.harris/Desktop/egfr_out_AA.csv, header = F)
t$V2 <- gsub('[[]]', '', t$V2)
setwd('/Users/lincoln.harris/code/scratch/')
t <- read.csv('/Users/lincoln.harris/code/scratch/AA_testOut.csv', header = F)
t$V2 <- gsub('[[]]', '', t$V2)
t$V2 <- gsub('[[]', '', t$V2)
t$V2 <- gsub('[]]', '', t$V2)
t$V2 <- gsub("'", '', t$V2)
View(t)
library(stringr)
toAdd <- str_split_fixed(t$V2, ",", 10)
# how many to add? -- there has to be a smarter way of doing this
t$V2 <- toAdd[,1]
t$V3 <- toAdd[,2]
t$V4 <- toAdd[,3]
t$V5 <- toAdd[,4]
t$V6 <- toAdd[,5]
t$V7 <- toAdd[,6]
t$V8 <- toAdd[,7]
t$V9 <- toAdd[,8]
t$V10 <- toAdd[,9]
t1 <- t[,-1]
t1[ t1 == "" ] = NA
t2 <- t1[rowSums(is.na(t1)) != ncol(t1),] # remove rows
t3 <- t2[,colSums(is.na(t2)) != nrow(t2)] # remove cols
View(t3)
t2 <- t1[rowSums(is.na(t1)) != ncol(t1),] # remove rows
t3 <- t2[,colSums(is.na(t2)) != nrow(t2)] # remove cols
elementsList <- c(t3$V2, t3$V3, t3$V4, t3$V5, t3$V6)
countsTbl <- as.data.frame(table(elementsList))
countsTbl
# declare gene name!!
geneName <- 'EGFR'
baseStr <- './lollipops -legend -labels -o=myOut.svg'
cmdStr <- paste(baseStr, geneName)
for(i in 1:nrow(countsTbl)){
toAdd <- countsTbl$elementsList[i]
toAdd <- paste(toAdd, '@', sep = '')
toAdd <- paste(toAdd, countsTbl$Freq[i], sep = '')
cmdStr <- paste(cmdStr, toAdd, sep = " ")
}
# money
cmdStr
setwd('/Users/lincoln.harris/Desktop/')
t <- read.csv('/Users/lincoln.harris/Desktop/egfr_out_AA.csv', header = F)
View(t)
t$V2 <- gsub('[[]]', '', t$V2)
t$V2 <- gsub('[[]', '', t$V2)
t$V2 <- gsub('[]]', '', t$V2)
t$V2 <- gsub("'", '', t$V2)
library(stringr)
toAdd <- str_split_fixed(t$V2, ",", 10)
# how many to add? -- there has to be a smarter way of doing this
t$V2 <- toAdd[,1]
t$V3 <- toAdd[,2]
t$V4 <- toAdd[,3]
t$V5 <- toAdd[,4]
t$V6 <- toAdd[,5]
t$V7 <- toAdd[,6]
t$V8 <- toAdd[,7]
t$V9 <- toAdd[,8]
t$V10 <- toAdd[,9]
t1 <- t[,-1]
View(t1)
t1[ t1 == "" ] = NA
t2 <- t1[rowSums(is.na(t1)) != ncol(t1),] # remove rows
t3 <- t2[,colSums(is.na(t2)) != nrow(t2)] # remove cols
View(t3)
elementsList <- c(t3$V2, t3$V3, t3$V4, t3$V5, t3$V6)
countsTbl <- as.data.frame(table(elementsList))
countsTbl
# declare gene name!!
geneName <- 'EGFR'
baseStr <- './lollipops -legend -labels -o=myOut.svg'
cmdStr <- paste(baseStr, geneName)
for(i in 1:nrow(countsTbl)){
toAdd <- countsTbl$elementsList[i]
toAdd <- paste(toAdd, '@', sep = '')
toAdd <- paste(toAdd, countsTbl$Freq[i], sep = '')
cmdStr <- paste(cmdStr, toAdd, sep = " ")
}
# money
cmdStr
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("MutationalPatterns", version = "3.8")
install.packages("MutationalPatterns")
install.packages("Bioconductor")
install.packages("Bioconductor")
version
version
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("MutationalPatterns", version = "3.8")
clear
library(MutationalPatterns)
browseVignettes("MutationalPatterns")
library(BSgenome)
head(available.genomes())
getwd()
setwd('/Users/lincoln.harris/code/mutationalPatterns/')
getwd()
load("hg38-plus.gtf")
library(ref_genome, character.only = TRUE)
library(BSgenome)
available.genomes()
ref_genome <- 'BSgenome.Hsapiens.UCSC.hg38'
library(ref_genome, character.only = TRUE)
ref_genome <- "BSgenome.Hsapiens.UCSC.hg38"
library(ref_genome, character.only = TRUE)
ref_genome
> library(ref_genome, character.only = TRUE)
library(ref_genome, character.only = TRUE)
vcf_files <- list.files(system.file("extdata", package="MutationalPatterns"),
+ pattern = ".vcf", full.names = TRUE)
vcf_files <- list.files(system.file("extdata", package="MutationalPatterns"), pattern = ".vcf", full.names = TRUE)
vcf_files
sample_names <- c("colon1", "colon2", "colon3", "intestine1", "intestine2", "intestine3", "liver1", "liver2", "liver3")
summary(vcfs)
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
BSgenome(ref_genome)
BSgenome::getBSgenome(ref_genome)
library(ref_genome, character.only = TRUE)
genome <- getBSgenome("hg38")
available.genomes()
installed.genomes()
if (interactive()) {
if (!require("BiocManager"))
install.packages("BiocManager")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
}
if (interactive()) {
if (!require("BiocManager"))
install.packages("BiocManager")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
}
installed.genomes()
installed.genomes()
ref_genome <- "BSgenome.Hsapiens.UCSC.hg38"
library(ref_genome, character.only = TRUE)
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
summary(vcfs)
tissue <- c(rep("colon", 3), rep("intestine", 3), rep("liver", 3))
sample_names <- c("colon1", "colon2", "colon3", "intestine1", "intestine2", "intestine3", "liver1", "liver2", "liver3")
tissue <- c(rep("colon", 3), rep("intestine", 3), rep("liver", 3))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
summary(vcfs)
muts = mutations_from_vcf(vcfs[[1]])
head(muts, 12)
vcfs
vcfs[[1]]
vcfs[[2]]
types = mut_type(vcfs[[1]])
head(types, 12)
head(context, 12)
context = mut_context(vcfs[[1]], ref_genome)
context = mut_context(vcfs[[2]], ref_genome)
context = mut_context(vcfs[[3]], ref_genome)
type_context = type_context(vcfs[[1]], ref_genome)
context = mut_context(vcfs[[3]], ref_genome)
type_occurrences <- mut_type_occurrences(vcfs, ref_genome)
vcf_files <- list.files(path = './laud_sample_vcfs/', pattern = ".vcf", full.names = TRUE)
vcf_files
vcf_files <- list.files(path = './laud_sample_vcfs', pattern = ".vcf", full.names = TRUE)
vcf_files
vcf_files <- list.files(path = './laud_sample_vcfs', pattern = ".vcf", full.names = TRUE)
vcf_files
vcf_files <- list.files(path = './laud_sample_vcfs', pattern = ".vcf", full.names = TRUE)
vcf_files
vcf_files <- list.files(path = './laud_sample_vcfs', pattern = ".vcf", full.names = TRUE)
vcf_files
#sample_names <- c("A10_1001000407", "A10_1001000408", "A10_1001000412", "A10_B000863", "", "", "", "", "", "", "", "", "", "", "", "", )
strip()
#sample_names <- c("A10_1001000407", "A10_1001000408", "A10_1001000412", "A10_B000863", "", "", "", "", "", "", "", "", "", "", "", "", )
stringr::str_remove(vcf_files, ".vcf", "")
#sample_names <- c("A10_1001000407", "A10_1001000408", "A10_1001000412", "A10_B000863", "", "", "", "", "", "", "", "", "", "", "", "", )
stringr::str_remove_all(vcf_files, ".vcf", "")
#sample_names <- c("A10_1001000407", "A10_1001000408", "A10_1001000412", "A10_B000863", "", "", "", "", "", "", "", "", "", "", "", "", )
stringr::str_remove_all(vcf_files, ".vcf")
cellNames
#sample_names <- c("A10_1001000407", "A10_1001000408", "A10_1001000412", "A10_B000863", "", "", "", "", "", "", "", "", "", "", "", "", )
cellNames <- stringr::str_remove_all(vcf_files, ".vcf")
cellNames <- stringr::str_remove_all(cellNames, "./laud_samples/")
cellNames
cell_names <- stringr::str_remove_all(vcf_files, ".vcf")
cell_names <- stringr::str_remove_all(cell_names, "./laud_samples/")
cell_names
vcfs <- read_vcfs_as_granges(vcf_files, cell_names, ref_genome)
vcf_files <- list.files(path = './laud_sample_vcfs', pattern = ".vcf", full.names = TRUE)
vcf_files
cell_names <- stringr::str_remove_all(vcf_files, ".vcf")
cell_names <- stringr::str_remove_all(cell_names, "./laud_samples/")
cell_names
vcf_files <- list.files(system.file("extdata", package="MutationalPatterns"), pattern = ".vcf", full.names = TRUE)
vcf_files[[1]]
vcf_files <- list.files(path = './laud_sample_vcfs', pattern = ".vcf", full.names = TRUE)
vcf_files
cell_names <- stringr::str_remove_all(vcf_files, ".vcf")
cell_names <- stringr::str_remove_all(cell_names, "./laud_samples/")
cell_names
vcfs <- read_vcfs_as_granges(vcf_files, cell_names, ref_genome)
summary(vcfs)
vcfs[[1]]
vcfs[[2]]
muts = mutations_from_vcf(vcfs[[1]])
head(muts, 12)
context = mut_context(vcfs[[3]], ref_genome)
head(context)
context = mut_context(vcfs[[3]], ref_genome)
head(context)
type_context = type_context(vcfs[[1]], ref_genome)
lapply(type_context, head, 12)
type_occurrences <- mut_type_occurrences(vcfs, ref_genome)
type_occurrences
p1 <- plot_spectrum(type_occurrences)
p1
vcf_files <- list.files(path = './laud_sample_vcfs_larger', pattern = ".vcf", full.names = TRUE)
vcf_files
cell_names <- stringr::str_remove_all(vcf_files, ".vcf")
cell_names <- stringr::str_remove_all(cell_names, "./laud_samples/")
cell_names
cell_names <- stringr::str_remove_all(vcf_files, ".vcf")
cell_names <- stringr::str_remove_all(cell_names, "./laud_samples_larger/")
cell_names
vcfs <- read_vcfs_as_granges(vcf_files, cell_names, ref_genome)
summary(vcfs)
vcfs[[1]]
vcfs[[2]]
muts = mutations_from_vcf(vcfs[[1]])
head(muts, 12)
context = mut_context(vcfs[[3]], ref_genome)
head(context)
type_context = type_context(vcfs[[1]], ref_genome)
lapply(type_context, head, 12)
type_occurrences <- mut_type_occurrences(vcfs, ref_genome)
type_occurrences
p1 <- plot_spectrum(type_occurrences)
p1
setwd('/Users/lincoln.harris/code/ercc_exploration/cells/')
setwd('/Users/lincoln.harris/code/ercc_exploration/')
sub_rates_TN <- read.csv('sub_rates_TN.csv')
sub_rates_PER <- read.csv('sub_rates_PER.csv')
sub_rates_PD <- read.csv('sub_rates_PD.csv')
View(sub_rates_TN)
sub_rates_TN <- read.csv('sub_rates_TN.csv', header = FALSE)
sub_rates_PER <- read.csv('sub_rates_PER.csv', header = FALSE)
sub_rates_PD <- read.csv('sub_rates_PD.csv', header = FALSE)
sub_rates_all <- merge(sub_rates_TN, sub_rates_PER, sub_rates_PD)
rbind(sub_rates_TN, sub_rates_PD)
cbind(sub_rates_TN, sub_rates_PD)
View(sub_rates_PER)
df <- data.frame(matrix(ncol = 3, nrow = 1228))
df <- data.frame(matrix(ncol = 3, nrow = 1228))
names(df)[1] <- "TN_sub_rate"
View(df)
df <- data.frame(matrix(ncol = 3, nrow = 1228))
names(df)[1] <- "TN_sub_rate"
names(df)[2] <- "PER_sub_rate"
names(df)[3] <- "PD_sub_rate"
df$TN_sub_rate <- sub_rates_TN$V1
sub_rates_TN$V1[800]
sub_rates_TN$V1[846:1228] <- NA
#sub_rates_TN$V1[846:1228] <- NA
insertRows(sub_rates_TN, [846:1228], new = NA)
#sub_rates_TN$V1[846:1228] <- NA
insertRows(sub_rates_TN, c(846,1228), new = NA)
install.packages("berryFunctions")
library(berryFunctions)
#sub_rates_TN$V1[846:1228] <- NA
insertRows(sub_rates_TN, c(846,1228), new = NA)
#insertRows(df, r, new = NA)
insertRows(sub_rates_TN, c(846,1228), new = NA)
insertRows(sub_rates_PER, c(286,1228), new = NA)
#install.packages("berryFunctions")
library(berryFunctions)
setwd('/Users/lincoln.harris/code/ercc_exploration/')
sub_rates_TN <- read.csv('sub_rates_TN.csv', header = FALSE)
sub_rates_PER <- read.csv('sub_rates_PER.csv', header = FALSE)
sub_rates_PD <- read.csv('sub_rates_PD.csv', header = FALSE)
insertRows(sub_rates_TN, c(846,1228), new = NA)
insertRows(sub_rates_PER, c(286,1228), new = NA)
View(sub_rates_TN)
sub_rates_TN <- insertRows(sub_rates_TN, c(846,1228), new = NA)
sub_rates_PER <- insertRows(sub_rates_PER, c(286,1228), new = NA)
View(sub_rates_TN)
sub_rates_TN <- read.csv('sub_rates_TN.csv', header = FALSE)
sub_rates_PER <- read.csv('sub_rates_PER.csv', header = FALSE)
sub_rates_PD <- read.csv('sub_rates_PD.csv', header = FALSE)
sub_rates_TN <- insertRows(sub_rates_TN, c(846,1227), new = NA)
sub_rates_PER <- insertRows(sub_rates_PER, c(286,1227), new = NA)
df <- data.frame(matrix(ncol = 3, nrow = 1228))
names(df)[1] <- "TN_sub_rate"
names(df)[2] <- "PER_sub_rate"
names(df)[3] <- "PD_sub_rate"
View(df)
df$TN_sub_rate <- sub_rates_TN$V1
df$TN_sub_rate <- sub_rates_TN$V1
df$PER_sub_rate <- sub_rates_PER$V1
df$PD_sub_rate <- sub_rates_PD$V1
p <- ggplot(df, aes(x=dose, y=len)) + geom_boxplot()
p <- ggplot(df) + geom_boxplot()
p <- ggplot2(df) + geom_boxplot()
# god i hate this
#install.packages("berryFunctions")
library(berryFunctions)
library(ggplot2)
p <- ggplot2(df) + geom_boxplot()
p <- ggplot(df) + geom_boxplot()
p <- ggplot(df) + geom_boxplot()
p
p <- ggplot(df, aes(x =  variable, y = value)) + geom_boxplot()
p
p <- ggplot(df, aes(x = variable, y = value)) + geom_boxplot()
p
p <- ggplot(df, aes(x = factor(group), y = value)) + geom_boxplot()
p
p <- ggplot(df, aes(x = group, y = value)) + geom_boxplot()
p
p <- ggplot(df, aes(x = group, y = value)) + geom_boxplot()
p
df.melt<-melt(df)
df.melt <- melt(df)
?melt
??melt
#install.packages("berryFunctions")
library(berryFunctions)
library(ggplot2)
library(reshape2)
p <- ggplot(df, aes(x = group, y = value)) + geom_boxplot()
p
df.melt <- melt(df)
View(df.melt)
#ggplot(data.sum, aes(x=variable))+geom_boxplot(aes(ymin =min, lower = mean-sd, middle = mean, upper = mean+sd, ymax =max), stat="identity")
p <- ggplot(df.melt, aes(x = variable)) + geom_boxplot()
p
p <- ggplot(df.melt, aes(x = variable, y=value)) + geom_boxplot()
#ggplot(data.sum, aes(x=variable))+geom_boxplot(aes(ymin =min, lower = mean-sd, middle = mean, upper = mean+sd, ymax =max), stat="identity")
p <- ggplot(df.melt, aes(x = variable, y=value)) + geom_boxplot()
p
p <- ggplot(df.melt, aes(x = variable, y=value)) + geom_boxplot(outlier.shape = NA)
p
library(tidy    )
?geom_boxplot
p <- ggplot(df.melt, aes(x = variable, y=value)) + geom_boxplot(outlier.shape = NA, outlier.shape = NA)
